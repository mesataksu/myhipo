name: Go CI/CD

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, arm64]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: go mod tidy

    - name: Install golint
      run: go install golang.org/x/lint/golint@latest
    
    - name: Run go fmt
      run: go fmt ./...

    - name: Lint code
      run: golint ./...

    - name: Run tests
      run: go test ./...

  build:
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, arm64]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: go mod tidy

    - name: Build binary (macOS)
      if: runner.os == 'macOS'
      run: go build -o hipo

    - name: Build binary (Linux)
      if: runner.os == 'Linux' && runner.arch == 'x64'
      run: go build -o hipo

    - name: Build binary (Windows)
      if: runner.os == 'Windows' && runner.arch == 'x64'
      run: go build -o hipo.exe

    - name: Upload Build Artifact (Linux and macOS)
      if: runner.os != 'Windows'
      uses: actions/upload-artifact@v2
      with:
        name: hipo-${{ matrix.os }}-${{ matrix.arch }}
        path: ./hipo

    - name: Upload Build Artifact (Windows)
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v2
      with:
        name: hipo-windows-${{ matrix.arch }}
        path: ./hipo.exe

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: go mod tidy

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Download Build Artifacts (Linux)
      uses: actions/download-artifact@v2
      with:
        name: hipo-ubuntu-latest-x64
        path: ./hipo-ubuntu-x64

    - name: Download Build Artifacts (Windows)
      uses: actions/download-artifact@v2
      with:
        name: hipo-windows-x64
        path: ./hipo-windows-x64

    - name: Download Build Artifacts (macOS x64)
      uses: actions/download-artifact@v2
      with:
        name: hipo-macos-latest-x64
        path: ./hipo-macos-x64

    - name: Download Build Artifacts (macOS arm64)
      uses: actions/download-artifact@v2
      with:
        name: hipo-macos-latest-arm64
        path: ./hipo-macos-arm64

    - name: List downloaded files (Linux)
      if: runner.os == 'Linux'
      run: ls -al ./hipo-ubuntu-x64

    - name: List downloaded files (Windows)
      if: runner.os == 'Windows'
      run: dir ./hipo-windows-x64

    - name: List downloaded files (macOS x64)
      if: runner.os == 'macOS' && matrix.arch == 'x64'
      run: ls -al ./hipo-macos-x64

    - name: List downloaded files (macOS arm64)
      if: runner.os == 'macOS' && matrix.arch == 'arm64'
      run: ls -al ./hipo-macos-arm64

    - name: Upload Release Asset (Linux)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./hipo-ubuntu-x64/hipo
        asset_name: hipo-linux-x64-${{ github.ref_name }}
        asset_content_type: application/octet-stream

    - name: Upload Release Asset (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./hipo-windows-x64/hipo.exe
        asset_name: hipo-windows-x64-${{ github.ref_name }}
        asset_content_type: application/octet-stream

    - name: Upload Release Asset (macOS x64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./hipo-macos-x64/hipo
        asset_name: hipo-macos-x64-${{ github.ref_name }}
        asset_content_type: application/octet-stream

    - name: Upload Release Asset (macOS arm64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./hipo-macos-arm64/hipo
        asset_name: hipo-macos-arm64-${{ github.ref_name }}
        asset_content_type: application/octet-stream

        asset_content_type: application/octet-stream

    - name: Upload Release Asset (macOS arm64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./hipo-macos-arm64/hipo
        asset_name: hipo-macos-arm64-${{ github.ref_name }}
        asset_content_type: application/octet-stream
